@charset "UTF-8";
iframe {
  display: initial;
}

/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  text-decoration: underline dotted; /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select { /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

:root {
  --txtColor: #44d;
  --txtColor-sat: #00f;
  --txtColor-fade: #eef;
  --txtColor3: #d44;
  --txtColor3-fade: #fee;
  --txtColor2: #000;
  --pgColor: #fff;
}

/* ==== M A I N ==== */
.soup\.exe {
  border: #fff 1px solid;
  box-shadow: 10px 10px 20px 10px #44d;
  max-height: 90vh;
  max-width: 95vw;
  min-height: min(480px, 25vh);
  min-width: min(1152px, 25vw);
  resize: both;
}

html {
  scroll-behavior: smooth;
}

html, .nav, .c2 {
  background: url(/assets/image/bg.gif), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/bg.gif);
  background-color: #000;
  background-position: center;
  background-size: max(20vw, 40vh);
  image-rendering: pixelated;
}

html::before {
  content: "";
  position: fixed;
  inset: 0;
  z-index: -2;
  pointer-events: none;
  background: url(/assets/image/cloud.png), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/cloud.png);
  background-size: cover;
  background-position: center;
  opacity: 0.5;
}

html::after {
  content: "";
  position: fixed;
  inset: 0;
  z-index: -1;
  background: url(/assets/image/rain.gif), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/rain.gif);
  image-rendering: pixelated;
}

/* ======= */
/* ==== C 1 ==== */
.c1 .banner {
  border: #44d 1px solid;
  background-color: #ccf;
  text-wrap: nowrap;
  padding-inline: 5%;
  color: var(--txtColor2);
  font-size: min(72px, 5.0625vw);
}
.c1 .main {
  /* ==== N A V B A R ==== */
}
.c1 .main .nav {
  position: relative;
  border-inline: #44d 1px solid;
  /* ====Animating coolaf gradient bg==== */
}
.c1 .main .nav-c {
  position: relative;
  z-index: 1;
  height: 100%;
  /* ====link fluid hovering==== */
  text-shadow: #fff 2px 2px;
  mix-blend-mode: hard-light;
  color: #2985ff;
  /* ====ani==== */
}
.c1 .main .nav-c p {
  padding-inline: 1em 0;
  padding-block: 0.5em;
  margin-block: 0;
  display: flex;
}
.c1 .main .nav-c a, .c1 .main .nav-c .urHere-i {
  padding-right: 100%;
  padding-block: 0.5em;
  margin-right: -100%;
  margin-block: -0.5em;
}
.c1 .main .nav-c a {
  position: relative;
  color: #2985ff;
}
.c1 .main .nav-c a.urHere {
  pointer-events: none;
}
.c1 .main .nav-c .urHere-i {
  display: inline-block;
}
.c1 .main .nav-c p {
  transition: all 0ms 200ms, background-color 400ms 200ms;
}
.c1 .main .nav-c p:hover {
  transition: all 0ms;
  padding-left: 20%;
  background-color: #ccf;
}
.c1 .main .nav-b {
  position: absolute;
  left: -25%;
  height: 400%;
  width: 150%;
  bottom: 0;
  mix-blend-mode: lighten;
  background: linear-gradient(90deg, #000, rgba(0, 0, 0, 0) 50%), repeating-linear-gradient(#f80, #f0f 25%, #0ff 37.5%, #8f0 42%, #f80 50%);
  filter: contrast(2) blur(10px);
  /* ====ani==== */
  animation: bgScroll 10s linear infinite;
}
@keyframes bgScroll {
  from {
    bottom: -200%;
  }
  to {
    bottom: 0;
  }
}
.c1 .main .window {
  overflow: hidden;
}
.c1 .bottom {
  width: 100%;
  border: #44d 1px solid;
  background: #000;
}
.c1 .bottom img {
  position: relative;
  top: 50%;
  transform: translateY(-50%);
}

/* ==== C 2 ==== */
.c2-b {
  position: absolute;
  inset: 0;
  image-rendering: pixelated;
  background: url(/assets/image/bg2.gif), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/bg2.gif);
  background-color: #000;
  background-size: max(10vw, 20vh);
  mix-blend-mode: lighten;
}
.c2 .chatBox {
  position: absolute;
  inset: 0;
}
.c2 iframe[name=neolink] {
  position: absolute;
  margin: 10px;
  bottom: 0;
}

/* ======== */
/* ==== C O N T E N T ==== */
.content {
  text-align: justify;
  text-justify: inter-ideograph;
  background-color: var(--pgColor);
  padding-inline: 3em 2em;
}
.content *::selection {
  color: var(--pgColor);
  background: var(--txtColor);
}

.fullscreen {
  transition: opacity 200ms 200ms, top 200ms, bottom 200ms;
  position: absolute;
  display: flex;
  flex-direction: column;
  left: 50%;
  top: 50vh;
  bottom: 50vh;
  transform: translateX(-50%);
  z-index: 10;
  width: 90vw;
  background: #c0c0c0;
  border: 3px solid;
  border-left-color: #fff;
  border-top-color: #fff;
  border-right-color: #808080;
  border-bottom-color: #808080;
  border-bottom-width: 4px;
  box-shadow: -1px -1px 0 1px #dfdfdf, 0 0 0 2px #000;
}
.fullscreen.on {
  transition: opacity 200ms, top 200ms, bottom 200ms, background-color 200ms, border 200ms;
  opacity: 1;
  pointer-events: all;
  top: 2vh;
  bottom: 2vh;
}
.fullscreen .content {
  flex: 9;
  font-size: 1.2rem;
  border: solid 2px;
  border-left-color: #000;
  border-top-color: #000;
  border-right-color: #dfdfdf;
  border-bottom-color: #dfdfdf;
  padding-inline: 2em 5em;
  margin: 4px;
}
.fullscreen .bottomBar {
  height: 1em;
  padding: 0 0.5em 0.5em 0.5em;
}

.buttonBar {
  height: 1.5em;
  padding: 0.25em;
  color: #fff;
  background: linear-gradient(90deg, #33a 20%, #1084d0);
}
.buttonBar .toggle {
  position: absolute;
  display: block;
  top: 0.25em;
  width: 1.5em;
  height: 1.5em;
  box-sizing: border-box;
  margin-right: 0.5em;
  background: #c0c0c0;
  border: solid 3px;
  border-left-color: #fff;
  border-top-color: #fff;
  border-right-color: #000;
  border-bottom-color: #000;
}
.buttonBar .toggle:hover {
  background: #fff;
}
.buttonBar .toggle::before {
  content: "";
  position: absolute;
  top: 2px;
  left: 2px;
  right: 4px;
  bottom: 4px;
  image-rendering: pixelated;
  background-size: cover !important;
}
.buttonBar .toggle:active {
  background: #c0c0c0;
  border: solid 3px;
  border-left-color: #000;
  border-top-color: #000;
  border-right-color: #fff;
  border-bottom-color: #fff;
}
.buttonBar .toggle:active::before {
  top: 4px;
  left: 4px;
  right: 2px;
  bottom: 2px;
}
.window .buttonBar .toggle.fullscreenTg::before {
  background: url(/assets/image/button/max.gif), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/button/max.gif);
}
.fullscreen .buttonBar .toggle.fullscreenTg::before {
  background: url(/assets/image/button/unmax.gif), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/button/unmax.gif);
}
.buttonBar .toggle.darkTg::before {
  background: url(/assets/image/button/dark.gif), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/button/dark.gif);
}
.buttonBar .toggle.fontTg::before {
  background: url(/assets/image/button/font.gif), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/button/font.gif);
}
.window .buttonBar {
  position: relative;
  height: 100%;
  min-width: 20px;
  max-width: 20px;
  background: linear-gradient(#33d, #33d 20%, #4af);
  padding-inline: 0.25em;
  overflow: hidden;
}
.window .buttonBar .toggle {
  left: 50%;
  transform: translateX(-50%);
}
.window .buttonBar .darkTg {
  top: 2em;
}
.window .buttonBar .fontTg {
  top: 3.5em;
}
.fullscreen .buttonBar .fullscreenTg {
  right: 0em;
}
.fullscreen .buttonBar .darkTg {
  right: 1.75em;
}
.fullscreen .buttonBar .fontTg {
  right: 3.25em;
}

.content, .window {
  transition: color 0ms 500ms, background-color 200ms 500ms, border-color 200ms 500ms;
}

.buttonBar:has(.darkTg input:checked) ~ .content, .content:has(~ .buttonBar .darkTg input:checked) {
  transition: color 0ms, background-color 200ms;
  --txtColor: #aaf;
  --txtColor-sat: #00c;
  --txtColor-fade: #224;
  --txtColor3: #faa;
  --txtColor3-fade: #422;
  --txtColor2: #fff;
  --pgColor: #002;
}

.content:has(~ .buttonBar .darkTg input:checked) {
  background: rgba(0, 0, 0, 0.2666666667) !important;
}

.fullscreen:has(.darkTg input:checked) {
  transition: opacity 200ms 200ms, top 200ms, bottom 200ms, background-color 200ms, border 200ms;
  background: #444;
  border: 3px solid;
  border-left-color: #000;
  border-top-color: #000;
  border-right-color: #808080;
  border-bottom-color: #808080;
  border-bottom-width: 4px;
}
.fullscreen:has(.darkTg input:checked) .bottomBar {
  color: #fff;
}

/* ======== */
/* ==== C O R N E R ==== */
.cornerCara {
  /* ====randomBG==== */
}
.cornerCara, .cornerCara-b {
  position: fixed;
  bottom: -16vh;
  right: calc(10vw - 39vh);
  transform: scale(75%);
  z-index: -3;
  height: calc(100vh + 10vw);
  max-height: 140vh;
  aspect-ratio: 0.77;
  filter: drop-shadow(-1vw 2vw rgba(0, 0, 0, 0.5333333333));
}
.cornerCara-b {
  transition: opacity 1s;
  pointer-events: none;
  z-index: 2;
}
.cornerCara::before {
  content: "";
  position: absolute;
  inset: 0;
}
.soup\.exe:hover ~ .cornerCara-b, .soup\.exe:active ~ .cornerCara-b {
  transition: opacity 0ms;
  opacity: 0.5;
}
.cornerCara[id="0"] + .cornerCara-b, .cornerCara[id="0"]::before {
  background: url(/assets/image/cornerCara/marisa0.webp), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/cornerCara/marisa0.webp);
  background-size: contain;
}
.cornerCara[id="1"] + .cornerCara-b, .cornerCara[id="1"]::before {
  background: url(/assets/image/cornerCara/marisa1.webp), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/cornerCara/marisa1.webp);
  background-size: contain;
}
.cornerCara[id="2"] + .cornerCara-b, .cornerCara[id="2"]::before {
  background: url(/assets/image/cornerCara/marisa2.webp), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/cornerCara/marisa2.webp);
  background-size: contain;
}
.cornerCara[id="3"] + .cornerCara-b, .cornerCara[id="3"]::before {
  background: url(/assets/image/cornerCara/marisa3.webp), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/cornerCara/marisa3.webp);
  background-size: contain;
}
.cornerCara[id="4"] + .cornerCara-b, .cornerCara[id="4"]::before {
  background: url(/assets/image/cornerCara/marisa4.webp), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/cornerCara/marisa4.webp);
  background-size: contain;
}
.cornerCara[id="5"] + .cornerCara-b, .cornerCara[id="5"]::before {
  background: url(/assets/image/cornerCara/marisa5.webp), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/cornerCara/marisa5.webp);
  background-size: contain;
}
.cornerCara[id="6"] + .cornerCara-b, .cornerCara[id="6"]::before {
  background: url(/assets/image/cornerCara/marisa6.webp), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/cornerCara/marisa6.webp);
  background-size: contain;
}
.cornerCara[id="7"] + .cornerCara-b, .cornerCara[id="7"]::before {
  background: url(/assets/image/cornerCara/marisa7.webp), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/cornerCara/marisa7.webp);
  background-size: contain;
}
.cornerCara[id="8"] + .cornerCara-b, .cornerCara[id="8"]::before {
  background: url(/assets/image/cornerCara/marisa8.webp), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/cornerCara/marisa8.webp);
  background-size: contain;
}
.cornerCara[id="9"] + .cornerCara-b, .cornerCara[id="9"]::before {
  background: url(/assets/image/cornerCara/marisa9.webp), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/cornerCara/marisa9.webp);
  background-size: contain;
}
.cornerCara[id="10"] + .cornerCara-b, .cornerCara[id="10"]::before {
  background: url(/assets/image/cornerCara/marisa10.webp), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/cornerCara/marisa10.webp);
  background-size: contain;
}
.cornerCara[id="11"] + .cornerCara-b, .cornerCara[id="11"]::before {
  background: url(/assets/image/cornerCara/marisa11.webp), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/cornerCara/marisa11.webp);
  background-size: contain;
}
.cornerCara[id="12"] + .cornerCara-b, .cornerCara[id="12"]::before {
  background: url(/assets/image/cornerCara/marisa12.webp), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/cornerCara/marisa12.webp);
  background-size: contain;
}
.cornerCara[id="13"] + .cornerCara-b, .cornerCara[id="13"]::before {
  background: url(/assets/image/cornerCara/marisa13.webp), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/cornerCara/marisa13.webp);
  background-size: contain;
}
.cornerCara[id="14"] + .cornerCara-b, .cornerCara[id="14"]::before {
  background: url(/assets/image/cornerCara/marisa14.webp), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/cornerCara/marisa14.webp);
  background-size: contain;
}
.cornerCara[id="15"] + .cornerCara-b, .cornerCara[id="15"]::before {
  background: url(/assets/image/cornerCara/marisa15.webp), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/cornerCara/marisa15.webp);
  background-size: contain;
}
.cornerCara {
  background: url(/assets/image/cornerCara/marisaB_.webp), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/cornerCara/marisaB_.webp);
  background-size: 120%;
  background-position: -40% -40%;
  image-rendering: pixelated;
}

.ibm, .ibm-b {
  position: absolute;
  right: calc(10vw - 39vh);
  bottom: 0;
  z-index: -1;
  pointer-events: visible;
  transform: translateX(-20%);
  height: calc(25vh + 2.5vw);
  max-height: 35vh;
  aspect-ratio: 2;
}
.ibm-b {
  mix-blend-mode: darken;
}

.vid {
  position: absolute;
  display: none;
  right: -38%;
  bottom: -27%;
  transform: scale(0.17, 0.23) rotate(8deg) skew(3deg);
  width: 170%;
  aspect-ratio: 16/9;
  pointer-events: none;
  background: #fff;
}
@keyframes flicker {
  0% {
    opacity: 0.65;
  }
  50% {
    opacity: 0.65;
  }
  50.1% {
    opacity: 0.5;
  }
  100% {
    opacity: 0.5;
  }
}
.vid iframe {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 10;
  inset: 0;
}

.mask:has(input:checked) ~ .vid {
  display: block;
  animation: flicker 50ms linear infinite;
}

.pc {
  transition: visibility 0s 1s, opacity 1s;
  visibility: hidden;
}
.pc-b {
  transition: opacity 1s;
  z-index: 1;
}
.pc, .pc-b {
  position: absolute;
  right: 8%;
  bottom: 0%;
  width: 75%;
  aspect-ratio: 1.63;
  pointer-events: none;
  background: url(/assets/image/ibm.png), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/ibm.png);
  background-size: cover;
}
.pc::before, .pc-b::before {
  position: absolute;
  left: 35%;
  top: 45%;
  width: 50%;
  font-size: 3.2vh;
  z-index: 20;
  transform: rotate(9deg) skew(7deg);
}
.soup\.exe:hover ~ .ibm-b .pc {
  transition: visibility 0s;
  visibility: visible;
}
.soup\.exe:hover ~ .ibm .pc-b {
  transition: 0s;
  opacity: 0;
}

.mask {
  position: absolute;
  display: block;
  right: 32.7%;
  bottom: 10%;
  z-index: 1;
  transform: rotate(11deg) skew(7deg);
  width: 28%;
  aspect-ratio: 1.34;
  background: url(/assets/image/rainbowDither.png), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/rainbowDither.png);
  background-size: 4vw;
  opacity: 0;
  mix-blend-mode: darken;
  animation: maskScroll 1s linear infinite;
}
@keyframes maskScroll {
  0% {
    background-position: 0;
  }
  100% {
    background-position: 8vw;
  }
}
.mask:has(input:checked) {
  opacity: 0.3;
}
.mask:not(:has(input:checked)) ~ .pc-b::before, .ibm-b:not(:has(~ .ibm .mask input:checked)) .pc::before {
  color: #fff;
}
.mask:not(:has(input:checked)) ~ .pc-b::before, .ibm-b:not(:has(~ .ibm .mask input:checked)) .pc::before {
  content: "Power off";
  filter: drop-shadow(0 0 5px #fff);
}

/* ======== */
/* ==== C U R S O R ==== */
.soup\.exe, .fullscreen {
  cursor: url(/assets/image/cursor/hat.gif), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/cursor/hat.gif), auto !important;
}

a, button, .cornerCara {
  animation: wonderCursor 500ms infinite;
}
@keyframes wonderCursor {
  0% {
    cursor: url(/assets/image/cursor/hatq1.gif), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/cursor/hatq1.gif), auto;
  }
  25% {
    cursor: url(/assets/image/cursor/hatq2.gif), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/cursor/hatq2.gif), auto;
  }
  50% {
    cursor: url(/assets/image/cursor/hatq3.gif), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/cursor/hatq3.gif), auto;
  }
  75% {
    cursor: url(/assets/image/cursor/hatq4.gif), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/cursor/hatq4.gif), auto;
  }
  100% {
    cursor: url(/assets/image/cursor/hatq5.gif), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/cursor/hatq5.gif), auto;
  }
}

canvas {
  transition: 500ms;
  opacity: 0.5;
  z-index: -2;
  image-rendering: pixelated;
}
.soup\.exe:hover ~ canvas {
  opacity: 0;
  animation: hideCanvas 500ms linear forwards;
}
@keyframes hideCanvas {
  0% {
    visibility: visible;
  }
  100% {
    visibility: hidden;
  }
}

/* ==== F O N T ==== */
html {
  font-family: "fusion", "gfw-fusion", sans-serif;
}

html:has(.fontTg input:checked) {
  font-family: "ibm", "gfw-ibm", sans-serif;
}

code, kbd, samp {
  font-family: "ibm", "gfw-ibm", monospace;
}

html:has(.fontTg input:checked) code, kbd, samp {
  font-family: "fusion", "gfw-fusion", monospace;
}

@font-face {
  font-family: "fusion";
  src: url(/assets/font/fusion-pixel-10px-monospaced-zh_hant.ttf);
}
@font-face {
  font-family: "ibm";
  src: url(/assets/font/IBM3161.ttf);
}
@font-face {
  font-family: "zpix";
  src: url(/assets/font/zpix.ttf);
}
@font-face {
  font-family: "gfw-fusion";
  src: url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/font/fusion-pixel-10px-monospaced-zh_hant.ttf);
}
@font-face {
  font-family: "gfw-ibm";
  src: url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/font/IBM3161.ttf);
}
@font-face {
  font-family: "gfw-zpix";
  src: url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/font/zpix.ttf);
}
/* ======== */
em:not(.i)[class], em:not(.i)[r], em:not(.i)[t] {
  font-style: normal;
}

html {
  text-underline-offset: 25%;
}

.content {
  color: var(--txtColor) !important;
}
.content > p:not([class], :has(img)):after {
  content: "湯";
  position: relative;
  display: inline-block;
  line-height: 0.5em;
  padding-left: 0.3em;
  opacity: 0.5;
  font-size: 0.7em;
  color: var(--txtColor3);
  transform: rotate(15deg);
  white-space: pre;
}

hr {
  border: none;
  border-block: 2px var(--txtColor) solid;
  height: 0.2em;
  margin-block: 1em;
}

ul {
  list-style-type: hebrew;
}
ul ::marker {
  font-weight: bolder;
}
ul ul ::marker {
  font-size: 0.7em;
}
ul ul ul {
  list-style-type: circle;
}
ul ul ul ::marker {
  font-size: 1em;
}
ul ul ul ul ::marker {
  font-size: 0.7em;
}
ul ul ul ul ul {
  list-style-type: disc;
}
ul ul ul ul ul ::marker {
  font-size: 0.62em;
}

:root {
  --s: 1;
}

.big {
  --s: 1.25;
}

.bigger {
  --s: 1.5;
}

.small {
  --s: .75;
}

.smaller {
  --s: .5;
}

.resize:not(h1, h2, h3, h4, h5, h6, .fake), .big:not(h1, h2, h3, h4, h5, h6, .fake), .bigger:not(h1, h2, h3, h4, h5, h6, .fake), .small:not(h1, h2, h3, h4, h5, h6, .fake), .smaller:not(h1, h2, h3, h4, h5, h6, .fake) {
  font-size: calc(var(--s) * 1em);
}

h1 {
  font-size: 2em;
}

h1, .fake.h1 {
  font-size: 2em;
  font-weight: bold;
  --size: 2;
}
h1.resize, h1.big, h1.bigger, h1.small, h1.smaller, .fake.h1.resize, .fake.h1.big, .fake.h1.bigger, .fake.h1.small, .fake.h1.smaller {
  font-size: calc(var(--size) * var(--s) * 1em);
}

h2 {
  font-size: 1.6em;
}

h2, .fake.h2 {
  font-size: 1.6em;
  font-weight: bold;
  --size: 1.6;
}
h2.resize, h2.big, h2.bigger, h2.small, h2.smaller, .fake.h2.resize, .fake.h2.big, .fake.h2.bigger, .fake.h2.small, .fake.h2.smaller {
  font-size: calc(var(--size) * var(--s) * 1em);
}

h3 {
  font-size: 1.25em;
}

h3, .fake.h3 {
  font-size: 1.25em;
  font-weight: bold;
  --size: 1.25;
}
h3.resize, h3.big, h3.bigger, h3.small, h3.smaller, .fake.h3.resize, .fake.h3.big, .fake.h3.bigger, .fake.h3.small, .fake.h3.smaller {
  font-size: calc(var(--size) * var(--s) * 1em);
}

h4 {
  font-size: 1.25em;
}

h4, .fake.h4 {
  font-size: 1.25em;
  font-weight: bold;
  --size: 1.25;
}
h4.resize, h4.big, h4.bigger, h4.small, h4.smaller, .fake.h4.resize, .fake.h4.big, .fake.h4.bigger, .fake.h4.small, .fake.h4.smaller {
  font-size: calc(var(--size) * var(--s) * 1em);
}

h5 {
  font-size: 1.25em;
}

h5, .fake.h5 {
  font-size: 1.25em;
  font-weight: bold;
  --size: 1.25;
}
h5.resize, h5.big, h5.bigger, h5.small, h5.smaller, .fake.h5.resize, .fake.h5.big, .fake.h5.bigger, .fake.h5.small, .fake.h5.smaller {
  font-size: calc(var(--size) * var(--s) * 1em);
}

h6 {
  font-size: 1.25em;
}

h6, .fake.h6 {
  font-size: 1.25em;
  font-weight: bold;
  --size: 1.25;
}
h6.resize, h6.big, h6.bigger, h6.small, h6.smaller, .fake.h6.resize, .fake.h6.big, .fake.h6.bigger, .fake.h6.small, .fake.h6.smaller {
  font-size: calc(var(--size) * var(--s) * 1em);
}

h5, h6, .fake.h5, .fake.h6 {
  font-weight: normal;
}

h4, h6, .fake.h4, .fake.h6 {
  font-style: italic;
}

h1, h2, h3, h4, h5, h6 {
  margin-block: 1em 1em;
}

:first-child ~ h1, :first-child ~ h2, :first-child ~ h3, :first-child ~ h4, :first-child ~ h5, :first-child ~ h6 {
  margin-block: 2em 1em;
}

.c {
  position: relative;
  display: block;
  text-align: center;
  width: 100%;
}

.r {
  position: relative;
  display: block;
  text-align: right;
  right: 0;
  width: 100%;
}
.r::after {
  white-space: pre;
}

p:has(> .c), p:has(> .r), h1:has(> .c), h1:has(> .r), h2:has(> .c), h2:has(> .r), h3:has(> .c), h3:has(> .r), h4:has(> .c), h4:has(> .r), h5:has(> .c), h5:has(> .r), h6:has(> .c), h6:has(> .r) {
  width: 100%;
}

.u {
  text-decoration: underline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
.u.-d {
  text-decoration: dashed underline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
.u.-do {
  text-decoration: dotted underline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
.u.-db {
  text-decoration: double underline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
.u.-w {
  text-decoration: wavy underline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}

.ovl {
  text-decoration: overline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
.ovl.-d {
  text-decoration: dashed overline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
.ovl.-do {
  text-decoration: dotted overline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
.ovl.-db {
  text-decoration: double overline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
.ovl.-w {
  text-decoration: wavy overline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}

del, .del {
  text-decoration: line-through;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
del.-d, .del.-d {
  text-decoration: dashed line-through;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
del.-do, .del.-do {
  text-decoration: dotted line-through;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
del.-db, .del.-db {
  text-decoration: double line-through;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
del.-w, .del.-w {
  text-decoration: wavy line-through;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}

.u.ovl {
  text-decoration: underline overline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
.u.ovl.-d {
  text-decoration: dashed underline overline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
.u.ovl.-do {
  text-decoration: dotted underline overline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
.u.ovl.-db {
  text-decoration: double underline overline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
.u.ovl.-w {
  text-decoration: wavy underline overline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}

del.u, .del.u {
  text-decoration: line-through underline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
del.u.-d, .del.u.-d {
  text-decoration: dashed line-through underline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
del.u.-do, .del.u.-do {
  text-decoration: dotted line-through underline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
del.u.-db, .del.u.-db {
  text-decoration: double line-through underline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
del.u.-w, .del.u.-w {
  text-decoration: wavy line-through underline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
del.ovl, .del.ovl {
  text-decoration: line-through overline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
del.ovl.-d, .del.ovl.-d {
  text-decoration: dashed line-through overline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
del.ovl.-do, .del.ovl.-do {
  text-decoration: dotted line-through overline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
del.ovl.-db, .del.ovl.-db {
  text-decoration: double line-through overline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
del.ovl.-w, .del.ovl.-w {
  text-decoration: wavy line-through overline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
del.u.ovl, .del.u.ovl {
  text-decoration: line-through underline overline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
del.u.ovl.-d, .del.u.ovl.-d {
  text-decoration: dashed line-through underline overline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
del.u.ovl.-do, .del.u.ovl.-do {
  text-decoration: dotted line-through underline overline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
del.u.ovl.-db, .del.u.ovl.-db {
  text-decoration: double line-through underline overline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}
del.u.ovl.-w, .del.u.ovl.-w {
  text-decoration: wavy line-through underline overline;
  text-decoration-color: var(--lc);
  text-decoration-thickness: var(--lt);
}

.hw, .hb, .hr, .hwhite, .hsilver, .hgray, .hblack, .hred, .hmaroon, .hyellow, .holive, .hlime, .hgreen, .haqua, .hteal, .hblue, .hnavy, .hfuchsia, .hpurple, .bw, .bb, .br, .bwhite, .bsilver, .bgray, .bblack, .bred, .bmaroon, .byellow, .bolive, .blime, .bgreen, .baqua, .bteal, .bblue, .bnavy, .bfuchsia, .bpurple {
  position: relative;
  z-index: 1;
}
.hw::before, .hb::before, .hr::before, .hwhite::before, .hsilver::before, .hgray::before, .hblack::before, .hred::before, .hmaroon::before, .hyellow::before, .holive::before, .hlime::before, .hgreen::before, .haqua::before, .hteal::before, .hblue::before, .hnavy::before, .hfuchsia::before, .hpurple::before, .bw::before, .bb::before, .br::before, .bwhite::before, .bsilver::before, .bgray::before, .bblack::before, .bred::before, .bmaroon::before, .byellow::before, .bolive::before, .blime::before, .bgreen::before, .baqua::before, .bteal::before, .bblue::before, .bnavy::before, .bfuchsia::before, .bpurple::before {
  content: "";
  position: absolute;
  --bd: 0.02em;
  z-index: -1;
  left: calc(-0.2em + var(--bd) * -1);
  right: calc(-0.2em + var(--bd) * -1);
  top: calc(var(--bd) * -1);
  bottom: calc(var(--bd) * -1);
}

.cw, .cwhite {
  --clr: #FFFFFF;
}
.csilver {
  --clr: #C0C0C0;
}
.cgray {
  --clr: #808080;
}
.cb, .cblack {
  --clr: #000000;
}
.cr, .cred {
  --clr: #FF0000;
}
.cmaroon {
  --clr: #800000;
}
.cyellow {
  --clr: #FFFF00;
}
.colive {
  --clr: #808000;
}
.clime {
  --clr: #00FF00;
}
.cgreen {
  --clr: #008000;
}
.caqua {
  --clr: #00FFFF;
}
.cteal {
  --clr: #008080;
}
.cblue {
  --clr: #0000FF;
}
.cnavy {
  --clr: #000080;
}
.cfuchsia {
  --clr: #FF00FF;
}
.cpurple {
  --clr: #800080;
}
.cw, .cwhite, .csilver, .cgray, .cb, .cblack, .cr, .cred, .cmaroon, .cyellow, .colive, .clime, .cgreen, .caqua, .cteal, .cblue, .cnavy, .cfuchsia, .cpurple {
  color: var(--clr) !important;
}

.h {
  background-color: #ff0;
}
.hw, .hwhite {
  --clrh: #FFFFFF;
}
.hsilver {
  --clrh: #C0C0C0;
}
.hgray {
  --clrh: #808080;
}
.hb, .hblack {
  --clrh: #000000;
}
.hr, .hred {
  --clrh: #FF0000;
}
.hmaroon {
  --clrh: #800000;
}
.hyellow {
  --clrh: #FFFF00;
}
.holive {
  --clrh: #808000;
}
.hlime {
  --clrh: #00FF00;
}
.hgreen {
  --clrh: #008000;
}
.haqua {
  --clrh: #00FFFF;
}
.hteal {
  --clrh: #008080;
}
.hblue {
  --clrh: #0000FF;
}
.hnavy {
  --clrh: #000080;
}
.hfuchsia {
  --clrh: #FF00FF;
}
.hpurple {
  --clrh: #800080;
}
.hw::before, .hwhite::before, .hsilver::before, .hgray::before, .hb::before, .hblack::before, .hr::before, .hred::before, .hmaroon::before, .hyellow::before, .holive::before, .hlime::before, .hgreen::before, .haqua::before, .hteal::before, .hblue::before, .hnavy::before, .hfuchsia::before, .hpurple::before {
  background-color: var(--clrh);
}

.bw, .bwhite {
  --clrb: #FFFFFF;
}
.bsilver {
  --clrb: #C0C0C0;
}
.bgray {
  --clrb: #808080;
}
.bb, .bblack {
  --clrb: #000000;
}
.br, .bred {
  --clrb: #FF0000;
}
.bmaroon {
  --clrb: #800000;
}
.byellow {
  --clrb: #FFFF00;
}
.bolive {
  --clrb: #808000;
}
.blime {
  --clrb: #00FF00;
}
.bgreen {
  --clrb: #008000;
}
.baqua {
  --clrb: #00FFFF;
}
.bteal {
  --clrb: #008080;
}
.bblue {
  --clrb: #0000FF;
}
.bnavy {
  --clrb: #000080;
}
.bfuchsia {
  --clrb: #FF00FF;
}
.bpurple {
  --clrb: #800080;
}
.bw::before, .bwhite::before, .bsilver::before, .bgray::before, .bb::before, .bblack::before, .br::before, .bred::before, .bmaroon::before, .byellow::before, .bolive::before, .blime::before, .bgreen::before, .baqua::before, .bteal::before, .bblue::before, .bnavy::before, .bfuchsia::before, .bpurple::before {
  --bw: 2px;
  border: var(--clrb) solid var(--bw);
}

[r] {
  position: relative;
  display: inline-block;
  text-align: center;
}
[r]::before {
  content: attr(r);
  position: relative;
  left: 50%;
  transform: translateX(-50%);
  display: block;
  font-size: 0.75em;
}

[t] {
  text-decoration: dotted underline;
}
[t]::before {
  content: attr(t);
}

a::before {
  content: "转到：" attr(href) attr(t);
}

[t], a {
  --tc: var(--txtColor);
  position: relative;
}
[t]::before, a::before {
  transition: 200ms 400ms;
  pointer-events: none;
  position: absolute;
  left: 0;
  top: 0.5em;
  z-index: 10;
  width: fit-content;
  border: var(--tc) solid 2px;
  padding: 0.2em 0.5em;
  box-shadow: 4px 4px var(--tc);
  background: var(--pgColor);
  opacity: 0;
}
[t]:hover::before, a:hover::before {
  transition: 0ms;
  top: 1.5em;
  opacity: 1;
}

table {
  --tbc: var(--txtColor);
  --tbtc: var(--txtColor);
  position: relative;
  z-index: 1;
  color: var(--tbtc);
  border-collapse: collapse;
  margin-block: 1em;
}
table::before, table td, table th {
  padding-block: 0.2em;
  padding-inline: 0.5em;
}
table[h]::before {
  content: attr(h);
  position: relative;
  display: table-caption;
  bottom: -1px;
}
table.i {
  display: inline-table;
}
table.t {
  box-shadow: 2px 2px var(--tbc);
}
table.t thead, table.t tbody, table.t td:first-child, table.t tfoot {
  border: 2px solid;
  border-color: var(--tbc);
}
table.t td:first-child {
  border-block-width: 0;
}
table.t::before, table.t thead, table.t td:first-child {
  font-weight: bolder;
  text-align: center;
}
table.t tr:nth-child(even) td:not(:first-child) {
  position: relative;
}
table.t tr:nth-child(even) td:not(:first-child)::before {
  content: "";
  position: absolute;
  inset: 0;
  z-index: -1;
  background: var(--tbc);
  opacity: 0.3;
}
table.t::before {
  background: var(--tbc);
  color: var(--pgColor);
  box-shadow: 2px 2px var(--tbc);
}
table.ts thead, table.ts tbody, table.ts tr :first-child, table.ts tfoot {
  border: 0 solid;
  border-color: var(--tbc);
}
table.ts thead {
  border-bottom-width: 2px;
}
table.ts tbody:not(:first-child), table.ts tfoot {
  border-top-width: 2px;
}
table.ts tr :first-child {
  border-right-width: 2px;
}
table.ts::before {
  padding-block: 0.5em;
  font-weight: bolder;
  text-align: center;
}

.content > blockquote, :not(blockquote) > blockquote {
  margin-block: 2em;
}

blockquote {
  margin-right: 1em;
}
blockquote > p:first-child {
  margin-top: 0;
}
blockquote > p:last-child {
  margin-bottom: 0;
}
blockquote.info, blockquote.warn {
  display: table;
  position: relative;
  padding-inline: 2.5em 0.5em;
  padding-block: 0.5em;
  margin-left: 0;
}
blockquote.info::before, blockquote.warn::before {
  position: absolute;
  left: 0;
  top: 0.37em;
  padding-inline: 0.5em;
  font-size: 1.2em;
}
blockquote.info > blockquote, blockquote.warn > blockquote {
  margin-left: 0;
}
blockquote.info {
  background: var(--txtColor-fade);
  border: var(--txtColor) 3px solid;
  box-shadow: 4px 4px var(--txtColor);
}
blockquote.info::before {
  content: "ⓘ";
}
blockquote.warn {
  background: var(--txtColor3-fade);
  border: var(--txtColor3) 3px solid;
  box-shadow: 4px 4px var(--txtColor3);
  color: var(--txtColor3);
}
blockquote.warn::before {
  content: "⚠";
  top: 0.3em;
  font-size: 1.4em;
  font-weight: normal;
  padding-inline: 0.4em;
}
blockquote.layer:hover {
  background: var(--txtColor-fade);
}
blockquote.layer, blockquote.layer blockquote:not([class]) {
  transition: 200ms 500ms border, 200ms 500ms box-shadow;
  margin: 0 0.3em;
  padding: 0.5em;
  box-shadow: -3px 0 var(--txtColor);
  border: rgba(0, 0, 0, 0) 3px solid;
  border-left-width: 0;
}
blockquote.layer:hover, blockquote.layer blockquote:not([class]):hover {
  transition: 0ms border, 0ms box-shadow;
  border-color: var(--txtColor);
  box-shadow: -3px 0 var(--txtColor), 2px 2px 0 2px var(--txtColor);
}
blockquote.layer blockquote:not([class]) p {
  margin-left: 0.5em;
}
blockquote.layer blockquote:not([class]):hover:not(:has(blockquote:not([class]):hover)) {
  background: var(--pgColor);
}
blockquote.layer blockquote:not([class]):hover:not(:has(blockquote:not([class]):hover)) blockquote {
  transition: 200ms 500ms border, 200ms 500ms box-shadow;
  background: var(--pgColor);
}

/* ================ F A N C Y ================ */
.rainbow {
  --rspd: 1s;
  --rbgsz: 4em;
}
.rainbow, .rainbow *, .rainbow ::before {
  image-rendering: pixelated;
  background: url(/assets/image/rainbowDither.png), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/rainbowDither.png);
  background-size: var(--rbgsz);
  background-clip: text;
  -webkit-background-clip: text;
  color: rgba(0, 0, 0, 0);
  animation: rainbowScroll var(--rspd) linear infinite;
}
@keyframes rainbowScroll {
  0% {
    background-position: 0;
  }
  100% {
    background-position: var(--rbgsz);
  }
}
.rainbow.cmy, .rainbow.cmy * {
  background-image: url(/assets/image/rainbowDither_.png), url(https://ghproxy.com/https://raw.githubusercontent.com/Kirisoup/kirisoup.github.io/main/assets/image/rainbowDither_.png);
}

.rainbow.fancy {
  --rs: .1em;
  --rsc: var(--txtColor-sat);
  filter: drop-shadow(0.05em -0.05em var(--rsc)) drop-shadow(-0.05em 0.05em var(--rsc)) drop-shadow(var(--rs) var(--rs) var(--rsc));
}

.rainbow.fancy2 {
  --rs: .1em;
  --rsc: var(--txtColor-sat);
  filter: drop-shadow(0.05em 0.05em var(--txtColor-sat)) drop-shadow(0.1em 0.1em var(--pgColor)) drop-shadow(0.1em 0.1em #dd4) drop-shadow(0.1em 0.1em #4dd) drop-shadow(0.1em 0.1em #d4d) drop-shadow(0.05em -0.05em var(--rsc)) drop-shadow(-0.05em 0.05em var(--rsc));
}

.echo {
  text-shadow: 2px 2px var(--pgColor), 0.2em 0.2em rgba(68, 68, 221, 0.5333333333), 0.5em 0.5em rgba(68, 68, 221, 0.2666666667), 0.8em 0.8em rgba(68, 68, 221, 0.1333333333);
  padding-bottom: 0.8em;
}
.echo-down {
  text-shadow: 0px 2px var(--pgColor), 0em 0.2em rgba(68, 68, 221, 0.5333333333), 0em 0.5em rgba(68, 68, 221, 0.2666666667), 0em 0.8em rgba(68, 68, 221, 0.1333333333);
  padding-bottom: 0.8em;
}
.echo-up {
  text-shadow: 0px -2px var(--pgColor), 0em -0.2em rgba(68, 68, 221, 0.5333333333), 0em -0.5em rgba(68, 68, 221, 0.2666666667), 0em -0.8em rgba(68, 68, 221, 0.1333333333);
  padding-top: 0.8em;
}
.echo-right {
  text-shadow: 2px 0px var(--pgColor), 0.2em 0em rgba(68, 68, 221, 0.5333333333), 0.5em 0em rgba(68, 68, 221, 0.2666666667), 0.8em 0em rgba(68, 68, 221, 0.1333333333);
  padding-right: 0.8em;
}
.echo-left {
  text-shadow: -2px 0px var(--pgColor), -0.2em 0em rgba(68, 68, 221, 0.5333333333), -0.5em 0em rgba(68, 68, 221, 0.2666666667), -0.8em 0em rgba(68, 68, 221, 0.1333333333);
  padding-left: 0.8em;
}

.echorb {
  text-shadow: 0.1em 0.1em #d44, 0.2em 0.2em #dd4, 0.3em 0.3em #4dd, 0.4em 0.4em #d4d;
  padding-bottom: 0.8em;
}
.echorb-down {
  text-shadow: 0em 0.1em #d44, 0em 0.2em #dd4, 0em 0.3em #4dd, 0em 0.4em #d4d;
  padding-bottom: 0.8em;
}
.echorb-up {
  text-shadow: 0em -0.1em #d44, 0em -0.2em #dd4, 0em -0.3em #4dd, 0em -0.4em #d4d;
  padding-top: 0.8em;
}
.echorb-right {
  text-shadow: 0.1em 0em #d44, 0.2em 0em #dd4, 0.3em 0em #4dd, 0.4em 0em #d4d;
  padding-right: 0.8em;
}
.echorb-left {
  text-shadow: -0.1em 0em #d44, -0.2em 0em #dd4, -0.3em 0em #4dd, -0.4em 0em #d4d;
  padding-left: 0.8em;
}

.stroke {
  --std: 1px;
  --stc: var(--txtColor);
  color: var(--pgColor);
  text-shadow: calc(-1 * var(--std)) 0 var(--stc), calc(-1 * var(--std)) calc(-1 * var(--std)) var(--stc), 0 calc(-1 * var(--std)) var(--stc), calc(var(--std)) calc(-1 * var(--std)) var(--stc), calc(var(--std)) 0 var(--stc), calc(var(--std)) calc(var(--std)) var(--stc), 0 calc(var(--std)) var(--stc), calc(-1 * var(--std)) calc(var(--std)) var(--stc);
}
.stroke.shadow {
  --sdd: 4px;
  --sdc: var(--txtColor2);
  text-shadow: calc(-1 * var(--std)) 0 var(--stc), calc(-1 * var(--std)) calc(-1 * var(--std)) var(--stc), 0 calc(-1 * var(--std)) var(--stc), calc(var(--std)) calc(-1 * var(--std)) var(--stc), calc(var(--std)) 0 var(--stc), calc(var(--std)) calc(var(--std)) var(--stc), 0 calc(var(--std)) var(--stc), calc(-1 * var(--std)) calc(var(--std)) var(--stc), var(--sdd) var(--sdd) var(--sdc);
  padding-bottom: 0.2em;
}
.stroke.echo {
  text-shadow: calc(-1 * var(--std)) 0 var(--stc), calc(-1 * var(--std)) calc(-1 * var(--std)) var(--stc), 0 calc(-1 * var(--std)) var(--stc), calc(var(--std)) calc(-1 * var(--std)) var(--stc), calc(var(--std)) 0 var(--stc), calc(var(--std)) calc(var(--std)) var(--stc), 0 calc(var(--std)) var(--stc), calc(-1 * var(--std)) calc(var(--std)) var(--stc), 2px 2px var(--pgColor), 0.2em 0.2em rgba(68, 68, 221, 0.5333333333), 0.5em 0.5em rgba(68, 68, 221, 0.2666666667), 0.8em 0.8em rgba(68, 68, 221, 0.1333333333);
  padding-bottom: 0.8em;
}
.stroke.echo-down {
  text-shadow: calc(-1 * var(--std)) 0 var(--stc), calc(-1 * var(--std)) calc(-1 * var(--std)) var(--stc), 0 calc(-1 * var(--std)) var(--stc), calc(var(--std)) calc(-1 * var(--std)) var(--stc), calc(var(--std)) 0 var(--stc), calc(var(--std)) calc(var(--std)) var(--stc), 0 calc(var(--std)) var(--stc), calc(-1 * var(--std)) calc(var(--std)) var(--stc), 0px 2px var(--pgColor), 0em 0.2em rgba(68, 68, 221, 0.5333333333), 0em 0.5em rgba(68, 68, 221, 0.2666666667), 0em 0.8em rgba(68, 68, 221, 0.1333333333);
  padding-bottom: 0.8em;
}
.stroke.echo-up {
  text-shadow: calc(-1 * var(--std)) 0 var(--stc), calc(-1 * var(--std)) calc(-1 * var(--std)) var(--stc), 0 calc(-1 * var(--std)) var(--stc), calc(var(--std)) calc(-1 * var(--std)) var(--stc), calc(var(--std)) 0 var(--stc), calc(var(--std)) calc(var(--std)) var(--stc), 0 calc(var(--std)) var(--stc), calc(-1 * var(--std)) calc(var(--std)) var(--stc), 0px -2px var(--pgColor), 0em -0.2em rgba(68, 68, 221, 0.5333333333), 0em -0.5em rgba(68, 68, 221, 0.2666666667), 0em -0.8em rgba(68, 68, 221, 0.1333333333);
  padding-top: 0.8em;
}
.stroke.echo-right {
  text-shadow: calc(-1 * var(--std)) 0 var(--stc), calc(-1 * var(--std)) calc(-1 * var(--std)) var(--stc), 0 calc(-1 * var(--std)) var(--stc), calc(var(--std)) calc(-1 * var(--std)) var(--stc), calc(var(--std)) 0 var(--stc), calc(var(--std)) calc(var(--std)) var(--stc), 0 calc(var(--std)) var(--stc), calc(-1 * var(--std)) calc(var(--std)) var(--stc), 2px 0px var(--pgColor), 0.2em 0em rgba(68, 68, 221, 0.5333333333), 0.5em 0em rgba(68, 68, 221, 0.2666666667), 0.8em 0em rgba(68, 68, 221, 0.1333333333);
  padding-right: 0.8em;
}
.stroke.echo-left {
  text-shadow: calc(-1 * var(--std)) 0 var(--stc), calc(-1 * var(--std)) calc(-1 * var(--std)) var(--stc), 0 calc(-1 * var(--std)) var(--stc), calc(var(--std)) calc(-1 * var(--std)) var(--stc), calc(var(--std)) 0 var(--stc), calc(var(--std)) calc(var(--std)) var(--stc), 0 calc(var(--std)) var(--stc), calc(-1 * var(--std)) calc(var(--std)) var(--stc), -2px 0px var(--pgColor), -0.2em 0em rgba(68, 68, 221, 0.5333333333), -0.5em 0em rgba(68, 68, 221, 0.2666666667), -0.8em 0em rgba(68, 68, 221, 0.1333333333);
  padding-left: 0.8em;
}

.rotate {
  --rspd: 4s;
  --ofst-x: 0%;
  --ofst-y: 0%;
  --rphs: 0;
  --rheit: 2em;
  display: inline-block;
  transform-origin: calc(50% + var(--ofst-x)) calc(50% + var(--ofst-y));
  width: max-content;
  margin-block: calc(var(--rheit) / 2);
  padding: 0;
  animation: rotate var(--rspd) linear calc(var(--rspd) * var(--rphs) * -1) infinite;
}
.rotate.rev {
  animation-direction: reverse;
}
.rotate.c {
  transform: translateY(50%);
  animation-name: rotateCentered;
  left: 50%;
  transform: translateX(-50%);
}
@keyframes rotate {
  0% {
    transform: rotate(0);
  }
  100% {
    transform: rotate(360deg);
  }
}
@keyframes rotateCentered {
  0% {
    transform: translateX(-50%) rotate(0);
  }
  100% {
    transform: translateX(-50%) rotate(360deg);
  }
}

.pulse {
  --pspd: .25s;
  --pscl: 1.2;
  --pphs: 0;
  display: inline-block;
  font-size: calc(var(--pscl) * var(--s) * 1em) !important;
  animation: pulse var(--pspd) ease-out calc(var(--pspd) * var(--pphs) * -1) infinite alternate;
}
.pulse.fake.h1 {
  font-size: calc(var(--pscl) * 2 * 1em) !important;
}
.pulse.fake.h2 {
  font-size: calc(var(--pscl) * 1.6 * 1em) !important;
}
.pulse.fake.h3 {
  font-size: calc(var(--pscl) * 1.25 * 1em) !important;
}
.pulse.fake.h4 {
  font-size: calc(var(--pscl) * 1.25 * 1em) !important;
}
.pulse.fake.h5 {
  font-size: calc(var(--pscl) * 1.25 * 1em) !important;
}
.pulse.fake.h6 {
  font-size: calc(var(--pscl) * 1.25 * 1em) !important;
}
@keyframes pulse {
  0% {
    scale: calc(1 / var(--pscl));
  }
  100% {
    scale: 1;
  }
}

#oneko {
  transition: opacity 400ms;
  position: fixed;
  image-rendering: pixelated;
  left: 16px;
  top: 16px;
  width: 32px;
  height: 32px;
  background: url(/assets/neko/oneko_sakura.gif);
  z-index: 2533;
  scale: 1.5;
  filter: drop-shadow(0px 4px #000) opacity(0.7);
  pointer-events: none;
}

/*# sourceMappingURL=style.css.map */